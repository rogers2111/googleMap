{"remainingRequest":"/home/arogers/Documents/googleMap/node_modules/babel-loader/lib/index.js!/home/arogers/Documents/googleMap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arogers/Documents/googleMap/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arogers/Documents/googleMap/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arogers/Documents/googleMap/src/App.vue","mtime":1596544728851},{"path":"/home/arogers/Documents/googleMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arogers/Documents/googleMap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/arogers/Documents/googleMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arogers/Documents/googleMap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Fyb2dlcnMvRG9jdW1lbnRzL2dvb2dsZU1hcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBnbWFwc0luaXQgZnJvbSAnLi91dGlscy9nbWFwcyc7CmltcG9ydCAncmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXA6IG51bGwsCiAgICAgIGdvb2dsZTogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZ21hcHNJbml0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3RoaXMuZ29vZ2xlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5tYXAgPSBuZXcgX3RoaXMuZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXAiKSwgewogICAgICAgICAgICAgICAgem9vbTogOCwKICAgICAgICAgICAgICAgIGNlbnRlcjogewogICAgICAgICAgICAgICAgICBsYXQ6IDMxLjcxNzgzMSwKICAgICAgICAgICAgICAgICAgbG5nOiAtODQuMjQ3NzMyCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIF90aGlzLnNlYXJjaEJveCgpOwoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDhdXSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaEJveDogZnVuY3Rpb24gc2VhcmNoQm94KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwYWMtaW5wdXQiKTsKICAgICAgdmFyIHNlYXJjaEJveCA9IG5ldyB0aGlzLmdvb2dsZS5tYXBzLnBsYWNlcy5TZWFyY2hCb3goaW5wdXQpOwogICAgICB0aGlzLm1hcC5jb250cm9sc1t0aGlzLmdvb2dsZS5tYXBzLkNvbnRyb2xQb3NpdGlvbi5UT1BfTEVGVF0ucHVzaChpbnB1dCk7IC8vIEJpYXMgdGhlIFNlYXJjaEJveCByZXN1bHRzIHRvd2FyZHMgY3VycmVudCBtYXAncyB2aWV3cG9ydC4KCiAgICAgIHRoaXMubWFwLmFkZExpc3RlbmVyKCJib3VuZHNfY2hhbmdlZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBzZWFyY2hCb3guc2V0Qm91bmRzKF90aGlzMi5tYXAuZ2V0Qm91bmRzKCkpOwogICAgICB9KTsKICAgICAgdmFyIG1hcmtlcnMgPSBbXTsgLy8gTGlzdGVuIGZvciB0aGUgZXZlbnQgZmlyZWQgd2hlbiB0aGUgdXNlciBzZWxlY3RzIGEgcHJlZGljdGlvbiBhbmQgcmV0cmlldmUKICAgICAgLy8gbW9yZSBkZXRhaWxzIGZvciB0aGF0IHBsYWNlLgoKICAgICAgc2VhcmNoQm94LmFkZExpc3RlbmVyKCJwbGFjZXNfY2hhbmdlZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcGxhY2VzID0gc2VhcmNoQm94LmdldFBsYWNlcygpOwoKICAgICAgICBpZiAocGxhY2VzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBDbGVhciBvdXQgdGhlIG9sZCBtYXJrZXJzLgoKCiAgICAgICAgbWFya2Vycy5mb3JFYWNoKGZ1bmN0aW9uIChtYXJrZXIpIHsKICAgICAgICAgIG1hcmtlci5zZXRNYXAobnVsbCk7CiAgICAgICAgfSk7CiAgICAgICAgbWFya2VycyA9IFtdOyAvLyBGb3IgZWFjaCBwbGFjZSwgZ2V0IHRoZSBpY29uLCBuYW1lIGFuZCBsb2NhdGlvbi4KCiAgICAgICAgdmFyIGJvdW5kcyA9IG5ldyBfdGhpczIuZ29vZ2xlLm1hcHMuTGF0TG5nQm91bmRzKCk7CiAgICAgICAgcGxhY2VzLmZvckVhY2goZnVuY3Rpb24gKHBsYWNlKSB7CiAgICAgICAgICBpZiAoIXBsYWNlLmdlb21ldHJ5KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJSZXR1cm5lZCBwbGFjZSBjb250YWlucyBubyBnZW9tZXRyeSIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIGljb24gPSB7CiAgICAgICAgICAgIHVybDogcGxhY2UuaWNvbiwKICAgICAgICAgICAgc2l6ZTogbmV3IF90aGlzMi5nb29nbGUubWFwcy5TaXplKDcxLCA3MSksCiAgICAgICAgICAgIG9yaWdpbjogbmV3IF90aGlzMi5nb29nbGUubWFwcy5Qb2ludCgwLCAwKSwKICAgICAgICAgICAgYW5jaG9yOiBuZXcgX3RoaXMyLmdvb2dsZS5tYXBzLlBvaW50KDE3LCAzNCksCiAgICAgICAgICAgIHNjYWxlZFNpemU6IG5ldyBfdGhpczIuZ29vZ2xlLm1hcHMuU2l6ZSgyNSwgMjUpCiAgICAgICAgICB9OyAvLyBDcmVhdGUgYSBtYXJrZXIgZm9yIGVhY2ggcGxhY2UuCgogICAgICAgICAgbWFya2Vycy5wdXNoKG5ldyBfdGhpczIuZ29vZ2xlLm1hcHMuTWFya2VyKHsKICAgICAgICAgICAgbWFwOiBfdGhpczIubWFwLAogICAgICAgICAgICBpY29uOiBpY29uLAogICAgICAgICAgICB0aXRsZTogcGxhY2UubmFtZSwKICAgICAgICAgICAgcG9zaXRpb246IHBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uCiAgICAgICAgICB9KSk7CgogICAgICAgICAgaWYgKHBsYWNlLmdlb21ldHJ5LnZpZXdwb3J0KSB7CiAgICAgICAgICAgIC8vIE9ubHkgZ2VvY29kZXMgaGF2ZSB2aWV3cG9ydC4KICAgICAgICAgICAgYm91bmRzLnVuaW9uKHBsYWNlLmdlb21ldHJ5LnZpZXdwb3J0KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGJvdW5kcy5leHRlbmQocGxhY2UuZ2VvbWV0cnkubG9jYXRpb24pOwogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBfdGhpczIubWFwLmZpdEJvdW5kcyhib3VuZHMpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,OAAA,SAAA,MAAA,eAAA;AACA,OAAA,6BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,SAAA,EAFA;;AAAA;AAEA,cAAA,KAAA,CAAA,MAFA;AAGA,cAAA,KAAA,CAAA,GAAA,GAAA,IAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,CAAA;AAAA,gBAAA,MAAA,EAAA;AAAA,kBAAA,GAAA,EAAA,SAAA;AAAA,kBAAA,GAAA,EAAA,CAAA;AAAA;AAAA,eAAA,CAAA;;AACA,cAAA,KAAA,CAAA,SAAA;;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMA,cAAA,OAAA,CAAA,GAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA;AACA,UAAA,SAAA,GAAA,IAAA,KAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA,WAAA,GAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,IAAA,CAAA,eAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA,EAHA,CAIA;;AACA,WAAA,GAAA,CAAA,WAAA,CAAA,gBAAA,EAAA,YAAA;AACA,QAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,SAAA,EAAA;AACA,OAFA;AAGA,UAAA,OAAA,GAAA,EAAA,CARA,CASA;AACA;;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,gBAAA,EAAA,YAAA;AACA,YAAA,MAAA,GAAA,SAAA,CAAA,SAAA,EAAA;;AAEA,YAAA,MAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA;AACA,SALA,CAMA;;;AACA,QAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,IAAA;AACA,SAFA;AAGA,QAAA,OAAA,GAAA,EAAA,CAVA,CAWA;;AACA,YAAA,MAAA,GAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,CAAA,KAAA,CAAA,QAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,qCAAA;AACA;AACA;;AACA,cAAA,IAAA,GAAA;AACA,YAAA,GAAA,EAAA,KAAA,CAAA,IADA;AAEA,YAAA,IAAA,EAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,CAFA;AAGA,YAAA,MAAA,EAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAHA;AAIA,YAAA,MAAA,EAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAJA;AAKA,YAAA,UAAA,EAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AALA,WAAA,CALA,CAYA;;AACA,UAAA,OAAA,CAAA,IAAA,CACA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,YAAA,GAAA,EAAA,MAAA,CAAA,GADA;AAEA,YAAA,IAAA,EAAA,IAFA;AAGA,YAAA,KAAA,EAAA,KAAA,CAAA,IAHA;AAIA,YAAA,QAAA,EAAA,KAAA,CAAA,QAAA,CAAA;AAJA,WAAA,CADA;;AASA,cAAA,KAAA,CAAA,QAAA,CAAA,QAAA,EAAA;AACA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AACA,WAHA,MAGA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AACA;AACA,SA5BA;;AA6BA,QAAA,MAAA,CAAA,GAAA,CAAA,SAAA,CAAA,MAAA;AACA,OA3CA;AA4CA;AAxDA;AAlBA,CAAA","sourcesContent":["<template>\n    <div id=container>\n      \n      <div id=\"map\"></div>\n      <div id=\"searchdiv\">\n        <input type=\"text\" id=\"pac-input\" />\n        </div>\n    </div>  \n</template>\n\n<script>\nimport gmapsInit from './utils/gmaps';\nimport 'regenerator-runtime/runtime';\nexport default {\n  name: 'App',\n\n  data() {\n      return {\n            map: null,\n            google: null\n      }\n  },\n  async mounted() {\n      try {\n          this.google = await gmapsInit();\n          this.map = new this.google.maps.Map(document.getElementById(\"map\"), { zoom: 8, center: {lat: 31.717831, lng: -84.247732}});\n          this.searchBox();\n      } catch ( error ) {\n          console.log(error);\n      }\n  },\n  methods: {\n    searchBox(){\n      const input = document.getElementById(\"pac-input\");\n      const searchBox = new this.google.maps.places.SearchBox(input);\n      this.map.controls[this.google.maps.ControlPosition.TOP_LEFT].push(input);\n      // Bias the SearchBox results towards current map's viewport.\n      this.map.addListener(\"bounds_changed\", () => {\n        searchBox.setBounds(this.map.getBounds());\n      });\n      let markers = [];\n      // Listen for the event fired when the user selects a prediction and retrieve\n      // more details for that place.\n      searchBox.addListener(\"places_changed\", () => {\n        const places = searchBox.getPlaces();\n\n        if (places.length == 0) {\n          return;\n        }\n        // Clear out the old markers.\n        markers.forEach(marker => {\n          marker.setMap(null);\n        });\n        markers = [];\n        // For each place, get the icon, name and location.\n        const bounds = new this.google.maps.LatLngBounds();\n        places.forEach(place => {\n          if (!place.geometry) {\n            console.log(\"Returned place contains no geometry\");\n            return;\n          }\n          const icon = {\n            url: place.icon,\n            size: new this.google.maps.Size(71, 71),\n            origin: new this.google.maps.Point(0, 0),\n            anchor: new this.google.maps.Point(17, 34),\n            scaledSize: new this.google.maps.Size(25, 25)\n          };\n          // Create a marker for each place.\n          markers.push(\n            new this.google.maps.Marker({\n              map: this.map,\n              icon,\n              title: place.name,\n              position: place.geometry.location\n            })\n          );\n\n          if (place.geometry.viewport) {\n            // Only geocodes have viewport.\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        });\n        this.map.fitBounds(bounds);\n      });\n    }\n  }\n}\n\n</script>\n\n<style>\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n#container{\n  position: relative;\n}\n#searchdiv{\n  position: absolute;\n  top:10px;\n  left:50%;\n}\n#map {\n  width: 100vw;\n  height: 100vh;\n}\n</style>"],"sourceRoot":"src"}]}